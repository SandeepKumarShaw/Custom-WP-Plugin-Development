<?php
/*
Plugin Name: Front End User Registration and Login
Plugin URI: http://example.com/wp-plugins/creating-custom-user-front-end-registration-and-login-forms
Description: Custom front end user registration and login forms
Version: 1.0.0
Author: WP Team
Author URI: http://example.com/emp/wpteam-390
*/

// register our form css
wp_enqueue_style('custom_reg_log-form-css', plugin_dir_url( __FILE__ ) . 'css/forms.css');
// jquery-ui css
wp_enqueue_style('jquery-ui', plugin_dir_url( __FILE__ ) . 'css/jquery-ui.css');

function custom_reg_log_register_css_js() {
	wp_enqueue_script('front-end-registration-login', plugin_dir_url(__FILE__) . 'js/front-end-registration-login.js', array('jquery'), true);
	wp_enqueue_script('jquery-ui', plugin_dir_url(__FILE__) . 'js/jquery-ui.js', array('jquery'), true);
}
add_action('init', 'custom_reg_log_register_css_js');

// load our form css
function custom_reg_log_print_css() {
	global $custom_reg_log_load_css;
 
	// this variable is set to TRUE if the short code is used on a page/post
	if ( ! $custom_reg_log_load_css )
		return; // this means that neither short code is present, so we get out of here

	wp_print_styles('custom_reg_log-form-css');
}
add_action('wp_footer', 'custom_reg_log_print_css');

//Create a new user role as your choice
function add_roles_on_custom_reg_log_plugin_activation() {
	$capabilities = array(
		'read' => true, // true allows this capability
		'edit_posts' => false, // Allows user to edit their own posts
		'edit_pages' => false, // Allows user to edit pages
		'edit_others_posts' => false, // Allows user to edit others posts not just their own
		'create_posts' => false, // Allows user to create new posts
		'manage_categories' => false, // Allows user to manage post categories
		'publish_posts' => false, // Allows the user to publish, otherwise posts stays in draft mode
		'edit_themes' => false, // false denies this capability. User can’t edit your theme
		'install_plugins' => false, // User cant add new plugins
		'update_plugin' => false, // User can’t update any plugins
		'update_core' => false // user cant perform core updates
	);
	
	//remove_role( 'job_seeker' );
	//remove_role( 'job_provider' );
	
	add_role( 'job_seeker', 'Candidates', $capabilities );
	add_role( 'job_provider', 'Employer', $capabilities );
	
	/*C R E A T E     A    B A C K E N D    P A G E*/
    global $wpdb;

    $the_page_title = 'User Details';
    $the_page_name = 'user-details';

    // the menu entry...
    delete_option("my_plugin_page_title");
    add_option("my_plugin_page_title", $the_page_title, '', 'yes');
    // the slug...
    delete_option("my_plugin_page_name");
    add_option("my_plugin_page_name", $the_page_name, '', 'yes');
    // the id...
    delete_option("my_plugin_page_id");
    add_option("my_plugin_page_id", '0', '', 'yes');

    $the_page = get_page_by_title( $the_page_title );
    if ( ! $the_page ) {

        // Create post object
        $_p = array();
        $_p['post_title'] = $the_page_title;
        $_p['post_content'] = "[display_seekers_info]";
        $_p['post_status'] = 'publish';
        $_p['post_type'] = 'page';
        $_p['comment_status'] = 'closed';
        $_p['ping_status'] = 'closed';
        $_p['post_category'] = array(1); // the default 'Uncatrgorised'

        // Insert the post into the database
        $the_page_id = wp_insert_post( $_p );

    }
    else {
        // the plugin may have been previously active and the page may just be trashed...

        $the_page_id = $the_page->ID;

        //make sure the page is not trashed...
        $the_page->post_status = 'publish';
        $the_page_id = wp_update_post( $the_page );

    }
/*  E N D  */



    delete_option( 'my_plugin_page_id' );
    add_option( 'my_plugin_page_id', $the_page_id );
    
}
register_activation_hook( __FILE__, 'add_roles_on_custom_reg_log_plugin_activation' );

/* Runs on plugin deactivation*/
register_deactivation_hook( __FILE__, 'my_plugin_remove' );

function my_plugin_remove() {

    global $wpdb;

    $the_page_title = get_option( "my_plugin_page_title" );
    $the_page_name = get_option( "my_plugin_page_name" );

    //  the id of our page...
    $the_page_id = get_option( 'my_plugin_page_id' );
    if( $the_page_id ) {

        wp_delete_post( $the_page_id ); // this will trash, not delete

    }

    delete_option("my_plugin_page_title");
    delete_option("my_plugin_page_name");
    delete_option("my_plugin_page_id");

}

/*END*/


// To hide admin bar from frontend user (All user type excerpt administrator)
//if ( ! current_user_can( 'manage_options' ) ) {
    //show_admin_bar( false );
//}

//show_admin_bar( false );
// OR //
add_filter('show_admin_bar', '__return_false');


// user registration form shortcode
function custom_reg_log_registration_form( $atts ) {
	
	$atts = shortcode_atts( array(
		'regtype' => 'job_seeker' //default job_seeker
	), $atts, 'register_form' );
	
	// only show the registration form to non-logged-in members
	if(!is_user_logged_in()) {
	
		global $custom_reg_log_load_css;
		
		// set this to true so the CSS is loaded
		$custom_reg_log_load_css = true;
		
		// check to make sure user registration is enabled
		$registration_enabled = get_option('users_can_register');
	
		// only show the registration form if allowed
		if($registration_enabled) {
			if( $atts['regtype'] == 'job_seeker' ) {
				$output = custom_reg_log_registration_job_seeker_form_fields();
			}
			if( $atts['regtype'] == 'job_provider' ) {
				$output = custom_reg_log_registration_job_provider_form_fields();
			}
		} else {
			$output = __('User registration is not enabled');
		}
		return $output;
	}
	elseif(is_user_logged_in()) {
		return custom_reg_log_user_already_logedin();
	}
}
add_shortcode('register_form', 'custom_reg_log_registration_form');

// if user already logedin show a message
function custom_reg_log_user_already_logedin() {
	ob_start();
	
	global $current_user;
	get_currentuserinfo();
	$loggedin_u_role = $current_user->roles[0];
	//die("HI");
	
	
	/*
	if($loggedin_u_role == 'job_seeker'){
		echo 'Please fill the form below, download the application, fill it out and sign it, and re-upload it back to us.<br/>';
		echo '<a href="'. get_field('download_application','options').'" target="_blank"><i class="fa fa-file-pdf-o" aria-hidden="true"></i> Download the application here.</a>';
	}
	if($loggedin_u_role == 'job_provider'){
		echo 'Please download and fill out our Office Agreement and Credit Application, and upload back to us.<br/>';
		echo '<a href="'. get_field('download_office_agreement','options').'" target="_blank"><i class="fa fa-file-pdf-o" aria-hidden="true"></i> Download Office Agreement</a><br/>';

		echo '<a href="'. get_field('download_credit_application','options').'" target="_blank"><i class="fa fa-file-pdf-o" aria-hidden="true"></i> Download Credit Application</a>';
	}
	*/
	
	
	echo '<h3 class="regmsg">'. _e('<center>You are registered user. No need to fillup registration form again.</center>') .'</h3>';
	echo do_shortcode('[login_form]');
	return ob_get_clean();
}


// to include files
include( plugin_dir_path( __FILE__ ) . 'job-seekers-form.php');
include( plugin_dir_path( __FILE__ ) . 'job-providers-form.php');
include( plugin_dir_path( __FILE__ ) . 'new-user-form-submit.php');


// user login form shortcode
function custom_reg_log_login_form() {
	ob_start();
	if(!is_user_logged_in()) {
		
		global $custom_reg_log_load_css;
		
		// set this to true so the CSS is loaded
		$custom_reg_log_load_css = true;
		
		//print_r($_REQUEST);
		if( isset($_REQUEST['updusr']) && $_REQUEST['updusr']==md5('passrestsuc') ) {
			$output = '<p>Password has been successfully reset. You may log in below:</p>';
		} else{
			$output = '<p>Welcome to Red Rock Dental Staffing Agency! If your are a Dentists Office or Returning Candidate who has previously signed up, you may log in below:</p>';
		}
		$output .= '<div class="staff-user-list">'.custom_reg_log_login_form_fields().'</div>';
	} else {
		
		$output = '<div class="job-listing-hld">Welcome to Red Rock Dental Staffing Agency! You are already logged in!</div>';
		
		
		// could show some logged in user info here
		//$output = 'user info here';
		//$output = 'You are now registered user.';
	}
	echo $output;
	return ob_get_clean();
}
add_shortcode('login_form', 'custom_reg_log_login_form');

// login form fields
function custom_reg_log_login_form_fields() {
	ob_start(); ?>
		<?php /* ?><h2 class="custom_reg_log_header"><?php _e('Login'); ?></h2> <?php */?>
		
		<?php
		// show any error messages after form submission
		custom_reg_log_show_error_messages(); ?>
		
		<form id="custom_reg_log_login_form"  class="custom_reg_log_form"action="" method="post">
			<fieldset>
				<p>
					<label for="custom_reg_log_user_Login">Username</label>
					<input name="custom_reg_log_user_login" id="custom_reg_log_user_login" class="required" type="text"/>
				</p>
				<p>
					<label for="custom_reg_log_user_pass">Password</label>
					<input name="custom_reg_log_user_pass" id="custom_reg_log_user_pass" class="required" type="password"/>
				</p>
				<p>
					<input type="hidden" name="custom_reg_log_login_nonce" value="<?php echo wp_create_nonce('custom_reg_log-login-nonce'); ?>"/>
					<input id="custom_reg_log_login_submit" type="submit" value="Login"/>
				</p>
				<p>
					<a class="forgot_pasword" href="<?php echo get_field('forgot_password_page_slug','options'); ?>">Forgot password?</a>
				</p>
			</fieldset>
		</form>
	<?php
	return ob_get_clean();
}

// logs a member in after submitting a form
function custom_reg_log_login_member() {
		
	if(isset($_POST['custom_reg_log_user_login']) && wp_verify_nonce($_POST['custom_reg_log_login_nonce'], 'custom_reg_log-login-nonce')) {
				
		// this returns the user ID and other info from the user name
		$user = get_userdatabylogin($_POST['custom_reg_log_user_login']);
		
		if(!$user) {
			// if the user name doesn't exist
			custom_reg_log_errors()->add('empty_username', __('Invalid username'));
		}
		
		if(!isset($_POST['custom_reg_log_user_pass']) || $_POST['custom_reg_log_user_pass'] == '') {
			// if no password was entered
			custom_reg_log_errors()->add('empty_password', __('Please enter a password'));
		}
				
		// check the user's login with their password
		if(!wp_check_password($_POST['custom_reg_log_user_pass'], $user->user_pass, $user->ID)) {
			// if the password is incorrect for the specified user
			custom_reg_log_errors()->add('empty_password', __('Incorrect password'));
		}
		
		// retrieve all error messages
		$errors = custom_reg_log_errors()->get_error_messages();
		
		// only log the user in if there are no errors
		if(empty($errors)) {
			
			wp_setcookie($_POST['custom_reg_log_user_login'], $_POST['custom_reg_log_user_pass'], true);
			wp_set_current_user($user->ID, $_POST['custom_reg_log_user_login']);	
			do_action('wp_login', $_POST['custom_reg_log_user_login']);
			
			// send the newly created user to the current page after logging them in
			//$redirect_location = get_permalink(); // this would not be worked here
			global $current_user;
			get_currentuserinfo();
			$user_role = $current_user->roles[0];
			//die("HI");
			if($user_role == 'job_seeker'){
				
				wp_safe_redirect(get_site_url().'/job-listing/');
			}
			if($user_role == 'job_provider'){
				$redirect_location = $_SERVER['HTTP_REFERER'];
				wp_safe_redirect($redirect_location);
			}
						
			//wp_redirect(home_url());
			exit();
		}
	}
}
add_action('init', 'custom_reg_log_login_member');

// used for tracking error messages
function custom_reg_log_errors(){
    static $wp_error; // Will hold global variable safely
    return isset($wp_error) ? $wp_error : ($wp_error = new WP_Error(null, null, null));
}

// displays error messages from form submissions
function custom_reg_log_show_error_messages() {
	if($codes = custom_reg_log_errors()->get_error_codes()) {
		echo '<div class="custom_reg_log_errors">';
		    // Loop error codes and display errors
		   foreach($codes as $code){
		        $message = custom_reg_log_errors()->get_error_message($code);
		        echo '<span class="error"><strong>' . __('Error') . '</strong>: ' . $message . '</span><br/>';
		    }
		echo '</div>';
	}	
}


// to include files
include( plugin_dir_path( __FILE__ ) . 'admin-user-edit-form.php');


// related user list function
function custom_user_relation_listing($user_relation_list) {
	$current_user = wp_get_current_user();
	$current_user_role = $current_user->roles[0];
	ob_start(); ?>
		<form name="user-list-form" id="" method="post" action="">
			<input type="hidden" class="hire_a_url" value="<?php echo admin_url('admin-ajax.php'); ?>">		
			
				<div class="search-sec">
					<div class="text_box_search">
						<?php if($current_user_role == 'job_provider'){ ?>
						<input type="text" name="user_search_zip" id="user_search_zip" value="<?php echo $_REQUEST['user_search_zip']?$_REQUEST['user_search_zip']:'';?>" placeholder="Type zipcode here">
						<?php /*<input type="text" name="max_distance_search_field" id="max_distance_search_field" value="<?php echo $_REQUEST['max_distance_search_field']?$_REQUEST['max_distance_search_field']:'';?>" placeholder="Max working distance">*/ ?>
						<?php } ?>
						<input type="text" name="city_search_field" id="city_search_field" class="advance_search" value="<?php echo $_REQUEST['city_search_field']?$_REQUEST['city_search_field']:'';?>" placeholder="Type city here">
						<input type="text" name="state_search_field" id="state_search_field" class="advance_search" value="<?php echo $_REQUEST['state_search_field']?$_REQUEST['state_search_field']:'';?>" placeholder="Type state here">
					</div>
					
					<div class="custom_radio advance_search">
						<p><?php _e('Candidate prefers which type of position: '); ?></p>
						<?php if($current_user_role == 'job_seeker'){ ?>
							<span><input name="practice_type_search_field" type="radio" value="General" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='General' ) echo ' checked'; ?> /><em>General</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Periodontal" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Periodontal' ) echo ' checked'; ?> /><em>Periodontal</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Pediatric" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Pediatric' ) echo ' checked'; ?> /><em>Pediatric</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Orthodontic" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Orthodontic' ) echo ' checked'; ?> /><em>Orthodontic</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Endodontic" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Endodontic' ) echo ' checked'; ?> /><em>Endodontic</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Dental Lab" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Dental Lab' ) echo ' checked'; ?> /><em>Dental Lab</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Government" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Government' ) echo ' checked'; ?> /><em>Government</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Other" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Other' ) echo ' checked'; ?> /><em>Other</em></span>
							<span><input name="practice_type_search_field" type="radio" value="" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='' ) echo ' checked'; ?> /><em>None</em></span>
						<?php }else{ ?>
							<span><input name="practice_type_search_field" type="radio" value="Any Kind" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Any Kind' ) echo ' checked'; ?> /><em>Any Kind</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Temporary" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Temporary' ) echo ' checked'; ?> /><em>Temporary</em></span>
							<span><input name="practice_type_search_field" type="radio" value="Permanent" <?php if( isset($_POST["practice_type_search_field"]) && $_POST["practice_type_search_field"]=='Permanent' ) echo ' checked'; ?> /><em>Permanent</em></span>
						<?php } ?>
					</div>
					
				<?php if($current_user_role == 'job_provider'){ //print_r($_POST["available_search_field"]);?>			
				<div class="custom_check advance_search">
					<p><?php _e('For which days do you have an open position?'); ?></p>
					<div class=checkbox-wrap>
						<span><input name="available_search_field[]" type="checkbox" value="Monday" <?php if(isset($_POST["available_search_field"]) && in_array("Monday", $_POST["available_search_field"])) echo ' checked'; ?> /><em>Monday</em></span>
						<span><input name="available_search_field[]" type="checkbox" value="Tuesday" <?php if(isset($_POST["available_search_field"]) && in_array("Tuesday", $_POST["available_search_field"])) echo ' checked'; ?> /><em>Tuesday</em> </span>
						<span><input name="available_search_field[]" type="checkbox" value="Wednesday" <?php if(isset($_POST["available_search_field"]) && in_array("Wednesday", $_POST["available_search_field"])) echo ' checked'; ?> /><em>Wednesday</em> </span>
						<span><input name="available_search_field[]" type="checkbox" value="Thursday" <?php if(isset($_POST["available_search_field"]) && in_array("Thursday", $_POST["available_search_field"])) echo ' checked'; ?> /><em>Thursday</em></span>
						<span><input name="available_search_field[]" type="checkbox" value="Friday" <?php if(isset($_POST["available_search_field"]) && in_array("Friday", $_POST["available_search_field"])) echo ' checked'; ?> /><em>Friday</em> </span>
						<span><input name="available_search_field[]" type="checkbox" value="Saturday" <?php if(isset($_POST["available_search_field"]) && in_array("Saturday", $_POST["available_search_field"])) echo ' checked'; ?> /><em>Saturday</em></span>
						<span><input name="available_search_field[]" type="checkbox" value="Sunday" <?php if(isset($_POST["available_search_field"]) && in_array("Sunday", $_POST["available_search_field"])) echo ' checked'; ?> /><em>Sunday</em></span>
					</div>
				</div>
				<?php } ?>
				
				<input type="submit" name="user_search_btn" id="user_search_btn" value="Filter">
				<?php /*
				<small class="">
					<a href="javascript:void(0);" title="Advance Filter" class="advance_search_btn">Show Advance Filter</a>
				</small>		
				*/ ?>
				</div>	
			
			
						 
			  
			<?php if( !empty($user_relation_list) ) { ?>
			<div class="all-items">
				
			  <?php foreach($user_relation_list as $single_user) { $user_info = get_userdata($single_user);
			  //echo '<pre>'; print_r($user_info->roles[0]); echo '</pre>';
			  ?>
			  <div class="get_user_details <?php echo 'user_details_'.$single_user; ?>" id="<?php echo 'user_details_'.$single_user; ?>">				 
				
				<ul class="user_sort_desc_<?php echo $single_user; ?>" id="user_sort_desc_<?php echo $single_user; ?>">
					<li class="p_img"><a href="<?php echo site_url();?>/user-details?id=<?php echo base64_encode ( $user_info->data->ID );?>" title="<?php echo $user_info->data->display_name; ?>" class="user_avatar" id="<?php echo 'user_avatar'.$single_user; ?>">
					<?php get_profile_image($single_user,48,$user_info->roles[0]);?>
					</a></li>
					<?php if($current_user_role == 'job_seeker'){ ?>
						<li id="uname_<?php echo $single_user;?>"><?php echo get_user_meta($single_user,'industry',true); ?></li>
					<?php } else{ ?>
						<li id="uname_<?php echo $single_user;?>"><?php echo $user_info->data->display_name; ?></li>
					<?php } ?>
					<li class="u_list"><a href="<?php echo site_url();?>/user-details?id=<?php echo base64_encode ( $user_info->data->ID );?>" title="View Details" class="click_to_view_details"><?php echo 'Learn More'; ?></a></li>
					<?php if($user_info->roles[0] == 'job_seeker'){ ?>
						<li class="u_list contact_url contact_url_<?php echo $single_user;?>" id="contact_url_<?php echo $single_user;?>"><a href="javascript:void(0)" id="hire_<?php echo $single_user;?>">INQUIRE NOW</a></li>
					<?php } ?>
				</ul>	
				
			  </div>         
			  <?php } ?>
			  <?php } else { ?>
				<div class='job-listing-hld test'>
					<p>There are no candidate(s).</p>
				</div>
			  <?php } ?>
			</div>
			
			
		</form>		
		<?php
	return ob_get_clean();
}


// get related user's list
function custom_get_related_listing() {
	if( is_user_logged_in() ) {
		$user_details = new WP_User(get_current_user_id());
		$user_id = $user_details->ID;	
		//echo '<pre>'; print_r($user_details); echo '</pre>';
		$user_role = $user_details->roles[0];
		$user_relation = get_user_meta( $user_id, 'relation_with_users', false);
		if( !empty($user_relation[0] )) {
			$user_relation_list = unserialize($user_relation[0]);
		}
		//print_r($user_relation_list);
		$permission = get_user_meta($user_id, 'users_permission');
		/*
		global $custom_reg_log_load_css;
		// set this to true so the CSS is loaded
		$custom_reg_log_load_css = true;
		$output = custom_reg_log_login_form_fields();
		*/
		if( $permission[0] == 'Enable' ) { //Need admin permission to view user list
			// You must be carefull for the below section functionality.
			// If you checked at least one user from admin, then you will see only this selected user at frontend.
			if ( !empty($user_relation_list) ) {
				$userlists =  $user_relation_list;
			} else {
				$userlists = array();
				
				if( $user_role == 'job_seeker' ) {
					$role__in = 'job_provider';
				} else {
					$role__in = 'job_seeker';
				}
				
			
				
				
			if($user_role == 'job_provider'){ ?>
			<!--====================PROVIDER APPLICATION UPLOAD SECTION START================-->
			    <div class="application_upload">
				<?php
				$user_creditapp = get_the_author_meta( '_user_creditapp', $user_id );
				$user_offcaggr = get_the_author_meta( '_user_offcaggr', $user_id  );
				
				if(!$user_creditapp || !$user_offcaggr){
				    echo "<span class='red_cross'>Before you can apply for a candidate, you must have a signed Credit Application and Employer Application on file. <a href='".get_permalink(365)."'>Click here</a></span>";
				    echo '<p class="sub-title">Browse the available candidates below, and click on "INQUIRE NOW."  We will reach out to check the candidate&#39;s availability and set up the interview. <a class"red_test" href="'.get_permalink(10).'#service_matches" >View our Fee Schedule</a></p>';
				    
				    
				}else{
				    echo "<span class='green_check'>Credit application and Employer Application On file</span>";
				} 
				?>
			    </div>
			<!--====================PROVIDER APPLICATION UPLOAD SECTION END================-->
			<?php } 
	
	
	
	
	
	
	
				/***********For Zip Search START*********/
				if($_REQUEST['user_search_zip']){
					$user_search_zip[] = array(
							'key' => 'zip_code',
							'value' => $_REQUEST['user_search_zip'],
							'compare' => '='
						);
				}
				else{
					$user_search_zip = array();
				}
				/***********For  Zip Search END*********/
				
				
				/***********For Max Search Distance START*********/
				if($_REQUEST['max_distance_search_field']){
					$max_distance_search_field[] = array(
							'key' => 'max_working_distance',
							'value' => $_REQUEST['max_distance_search_field'],
							'compare' => 'LIKE'
						);
				}
				else{
					$max_distance_search_field = array();
				}
				/***********For  Max Search Distance END*********/
				
				
				
				/***********For Practice Type Search START*********/
				if( $_REQUEST['practice_type_search_field']=='Any Kind' ){
					$practice_type_search_field = array();
				}
				else if( $_REQUEST['practice_type_search_field']!='') {
					$practice_type_search_field[] = array(
							'key' => 'industry',
							'value' => $_REQUEST['practice_type_search_field'],
							'compare' => '='
					);
				}
				else{
					$practice_type_search_field = array();
				}
				/***********For  Practice Type Search END*********/
				
				
				/***********For Available Days START*********/
				$available_search_field = $_REQUEST['available_search_field'];
				/*if($_REQUEST['available_search_field']){
					$available_search_field[] = array(
							'key' => 'available_days',
							'value' => '%'.serialize($_REQUEST['available_search_field']).'%',
							'compare' => 'LIKE'
						);
				}
				else{
					$available_search_field = array();
				}*/
				/***********For  Available Days END*********/
				
				
				
				
				/***********For City START*********/
				if($_REQUEST['city_search_field']){
					$city_search_field[] = array(
							'key' => 'user_city',
							'value' => $_REQUEST['city_search_field'],
							'compare' => 'LIKE'
						);
				}
				else{
					$city_search_field = array();
				}
				/***********For City END*********/
				
				/***********For State START*********/
				if($_REQUEST['state_search_field']){
					$state_search_field[] = array(
							'key' => 'user_state',
							'value' => $_REQUEST['state_search_field'],
							'compare' => 'LIKE'
						);
				}
				else{
					$state_search_field = array();
				}
				/***********For State END*********/
	print_r($available_search_field);
				$args = array(
					'role'         => '',
					'role__in'     => array($role__in),
					'role__not_in' => array(),
					//'meta_key'     => '',
					//'meta_value'   => '',
					//'meta_compare' => '',
					//'meta_query'   => array(),
					'meta_query' => array(
						//'relation' => 'OR', //**** Use AND or OR as per your required Where Clause
						$user_search_zip,
						$max_distance_search_field,
						$practice_type_search_field,
						$available_search_field,						
						$city_search_field,
						$state_search_field
						
						
					),
					'date_query'   => array(),        
					'include'      => array(),
					'exclude'      => array(),
					'orderby'      => 'user_login',
					'order'        => 'ASC',
					'offset'       => '',
					//'search'       => '*'.esc_attr( $search_str ).'*',
					'number'       => -1,
					'count_total'  => false,
					'fields'       => 'all',
					'who'          => '',
				); 
				$ourusers = get_users($args);
				//print_r($ourusers);
				if( count($ourusers)>0 ) {
					
					foreach($ourusers as $user) {
						$available_days_array = array();
					      if($available_search_field){
						//print_r($available_search_field);
						      $available_days_array = unserialize(get_user_meta($user->ID,'available_days', true));
						      foreach($available_search_field as $single_avl_search){
							if (in_array($single_avl_search, $available_days_array)){
							      $userlists[] = $user->ID;
							}
						      }
						     
					      }else{
						      $userlists[] = $user->ID;
					      }
					      
					}
				} else {
					$userlists =  NULL;
				}
				//global $wpdb;
				//echo $wpdb->last_query;
				$userlists = array_unique($userlists);
			}
			$output =  custom_user_relation_listing($userlists);
		} else {
			if($_REQUEST['msg'])
			{
				$regis_status = '<span class="success_msg">Thank you. Your registration process successfully completed.</span>';
			}
			else{
				$regis_status = '';
			}
			$output =  '<p class="success">'.$regis_status.'<div class="job-listing-hld">Please wait for authorization to view candidate list.</div></p>';
		}
		
	} else {
		$output  = '';
		//$output .= '<p>Use the form below to log in!</p>';
		$output .= custom_reg_log_login_form();
	}
	return $output;
}
add_shortcode('get_related_listing', 'custom_get_related_listing');

//add_filter('get_avatar', 'change_get_avatar_fun', 1, 5);
//function change_get_avatar_fun() {
//	$avatar = '';
//	return $avatar;
//}



/*****************Send Mail to admin, if "INQUIRE NOW" is clicked by Dental Offices START****************/
function hire_seeker_mail_ajax(){
   
    global $current_user;
    get_currentuserinfo();
    //print_r($current_user);
    $provider_id = $current_user->ID;
    $provider_name = $current_user->data->display_name;
    $provider_mail = $current_user->data->user_email;
    
    $hire_member_id = $_POST['hire_member_id'];
    $hire_member_details = get_userdata( $hire_member_id );
    $hire_member_name = $hire_member_details->data->display_name;
    
    /*****Add Interested Cadidates' ID to DB Start************/
     $candi_id_array = array();
        if(get_user_meta( $provider_id, 'interest_on_candidate', true )){
        $candi_list_string = get_user_meta( $provider_id, 'interest_on_candidate', true );
        $candi_id_array = explode(",",$candi_list_string);
        if (!in_array($hire_member_id, $candi_id_array))
        {
            array_push($candi_id_array,$hire_member_id);        
            $candi_id_string = implode(",",$candi_id_array);
            update_user_meta( $provider_id, 'interest_on_candidate', $candi_id_string );
            $status = 1;
        }
        else{ //If already applied for that particular candidate
            $status = 2;
        }
        
    }
    else{
        $candi_id_array[] = $hire_member_id;
        $candi_id_string = implode(",",$candi_id_array);
        add_user_meta( $provider_id, 'interest_on_candidate', $candi_id_string );
        $status = 1;
    }
    /*****Add Interested Cadidates' ID to DB END************/
    
	if($status ==1){
		$to = get_option( 'admin_email' );
		$subject = 'INQUIRE Request of Candidate';
		
		$message = 'Hello Admin,<br/>'.$provider_name.' is interested for the candidate '.$hire_member_name.'.<br/> Thank You';
		
		$headers[] = 'MIME-Version: 1.0' . "\r\n";
		$headers[] = 'Content-type: text/html; charset=iso-8859-1' . "\r\n";
		$headers[] = "X-Mailer: PHP \r\n";
		$headers[] = 'From: '.$provider_name.' < '.$provider_mail.'>' . "\r\n";
		
		$mail = wp_mail( $to, $subject, $message, $headers );
		if( $mail )
			echo 1;
	}
	if($status ==2){
		echo 2;
	}
	
    wp_die();
    
    exit;


}

add_action( 'wp_ajax_hire_seeker_mail_ajax', 'hire_seeker_mail_ajax' );
add_action( 'wp_ajax_nopriv_hire_seeker_mail_ajax', 'hire_seeker_mail_ajax' );

/*****************Send Mail to admin, if "INQUIRE NOW" is clicked by Dental Offices END****************/





/******************Send Mail Start**************/


/******************Send Mail Start**************/





/************Job Seeker Detils info START*****************/
function custom_display_seekers_info($user_relation_list) {
	if( is_user_logged_in() ) {
$u_id = base64_decode($_REQUEST['id']); 
$u_details = get_userdata( $u_id );

$u_role = $u_details->roles[0];
?>
<ul class="seekers_details_wrap">
	<input type="hidden" class="hire_a_url" value="<?php echo admin_url('admin-ajax.php'); ?>">
<?php						
	if($u_role == 'job_seeker') {			      
?>
	<li>
		<table width="100%" border="0">
			<tr>
				<td class="details-pg">
					<div class="get_user_details user_details_<?php echo $u_id;?>" id="user_details_<?php echo $u_id;?>">
						<ul class="user_sort_desc_<?php echo $u_id;?>" id="user_sort_desc_<?php echo $u_id;?>">
							<li>
								<?php //echo get_avatar( $u_id, 48, $default, $alt, $args ); ?>
								<?php get_profile_image($u_id,48,$u_role); ?>
							</li>
							<li id="uname_<?php echo $u_id;?>"><?php echo get_user_meta($u_id,'first_name',true); ?></li>
							<li class="contact_url contact_url_<?php echo $u_id;?>" id="contact_url_<?php echo $u_id;?>"><a href="javascript:void(0)" id="hire_<?php echo $u_id;?>">INQUIRE NOW</a></li>
						</ul>	
					</div>					
				</td>
				<td class="seekers_details">
					<ul>
						<li><span>City: </span><?php echo get_user_meta($u_id,'user_city',true)?get_user_meta($u_id,'user_city',true):'N/A'; ?></li>
						<li><span>State: </span><?php echo get_user_meta($u_id,'user_state',true)?get_user_meta($u_id,'user_state',true):'N/A'; ?></li>
						<li><span>Zip code: </span><?php echo get_user_meta($u_id,'zip_code',true)?get_user_meta($u_id,'zip_code',true):'N/A'; ?></li>
						<li><span>Max working distance: </span><?php echo get_user_meta($u_id,'max_working_distance',true)?get_user_meta($u_id,'max_working_distance',true):'N/A'; ?></li>
						<li><span>What kind of work are you looking for: </span><?php echo get_user_meta($u_id,'industry',true)?get_user_meta($u_id,'industry',true):'N/A'; ?></li>
						<li><span>What days are you available?: </span><?php
						$available = get_user_meta($u_id,'available_days',true);
						if( $available ) { echo implode(", ",unserialize($available)); } else { echo 'N/A'; }
						?></li>
					</ul>				
				</td>
			</tr>
		</table>
	</li>						
<?php   } else { ?>					
	<li>
		<table width="100%" border="0">
			<tr>
				<td class="details-pg">
					<div class="get_user_details user_details_<?php echo $u_id;?>" id="user_details_<?php echo $u_id;?>">
						<ul class="user_sort_desc_<?php echo $u_id;?>" id="user_sort_desc_<?php echo $u_id;?>">
							<li>
								<?php //echo get_avatar( $u_id, 48, $default, $alt, $args ); ?>
								<?php get_profile_image($u_id,48,$u_role); ?>
							</li>
							<li id="uname_<?php echo $u_id;?>"><?php echo get_user_meta($u_id,'company_name',true); ?></li>
						</ul>	
					</div>					
				</td>
				<td class="seekers_details">
					<ul>
						<li><span>Authorized Contact Person(s): </span><?php echo get_user_meta($u_id,'authorized_contact',true); ?></li>
						<li><span>Type Of Practice/Company: </span><?php echo get_user_meta($u_id,'industry',true); ?></li>
						<h3 class="listing_staff">Number of Current Staff: </h3>
						<li><span>Dentists: </span><?php echo get_user_meta($u_id,'emp_dentists',true); ?></li>
						<li><span>Hygienists: </span><?php echo get_user_meta($u_id,'emp_hygienists',true); ?></li>
						<li><span>Assistants:</span><?php echo get_user_meta($u_id,'emp_assistants',true); ?></li>
						<li><span>Other: </span><?php echo get_user_meta($u_id,'other_stuff',true); ?></li>
						<li><span>Computer Software used: </span><?php echo get_user_meta($u_id,'computer_sw',true); ?></li>
						<li><span>Will you accept a candidate who does not know your software? </span><?php echo get_user_meta($u_id,'exp_with_sw',true); ?></li>
						<li><span>X-Ray system used:</span><?php echo get_user_meta($u_id,'x_ray_used',true); ?></li>
					</ul>				
				</td>
			</tr>
		</table>
	</li>
<?php } ?>
</ul>

<?php
	} else {
		echo '<p class="login-required">Please <a href="'.site_url().'/login-now/" title="">login</a> first to view details.</p>';
	}
}
add_shortcode('display_seekers_info', 'custom_display_seekers_info');
/************Job Seeker Detils info END*****************/



/*************GET PROFILE PIC URL START************/
function get_profile_image($u_id,$size,$u_role){
	if(get_user_meta($u_id, 'sa_metronet_image_id',true)){
		echo get_avatar( $u_id, $size, $default, $alt, $args );		
	}
	else{
		if($u_role == 'job_provider'){
			$default_company_img = get_field('default_company_image','options');
			echo "<img width='".$size."' height='".$size."' src='".$default_company_img."'>";
		}if($u_role == 'job_seeker'){
			$default_seeker_img = get_field('default_seeker_image','options');
			echo "<img width='".$size."' height='".$size."' src='".$default_seeker_img."'>";
		}
		if($u_role == 'administrator'){
			echo get_avatar( $u_id, 32, $default, $alt, $args );
		}
	}
}
/*************GET PROFILE PIC URL END************/

// to include files for forgot password section
include( plugin_dir_path( __FILE__ ) . 'forgotPassword.php');
?>